{"pageProps":{"post":{"title":"Flexbox Zombies","date":"2020-06-26T00:00:00.000Z","slug":"2020/flexbox-zombies","content":"<p>https://mastery.games/flexboxzombies/</p>\n<p>先放上練習的流水帳，細節之後再整理。</p>\n<h3 id=\"ch1\">CH1<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ch1\"><span>#</span></a></h3>\n<ol>\n<li>將元素轉設定為 flex</li>\n</ol>\n<pre><code class=\"hljs language-css\">crossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n}\n</code></pre>\n<ol start=\"2\">\n<li>使用 flex-direction 變更排版方式，預設值為 <code>row</code></li>\n</ol>\n<pre><code class=\"hljs language-css\">// 左到右 (預設)\ncrossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">flex-direction</span>: row;\n}\n\n// 右到左\ncrossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">flex-direction</span>: row-reverse;\n}\n\n// 上到下\ncrossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">flex-direction</span>: column;\n}\n\n// 下到上\ncrossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">flex-direction</span>: column-reverse;\n}\n</code></pre>\n<h3 id=\"ch2\">CH2<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ch2\"><span>#</span></a></h3>\n<ol>\n<li>使用 justify-content 變更內容的對齊，預設值為 <code>flex-start</code></li>\n</ol>\n<pre><code class=\"hljs language-css\">// 對齊起始點 (預設：左)\ncrossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">justify-content</span>: flex-start;\n}\n\n// 對齊結束點 (右)\ncrossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">justify-content</span>: flex-end;\n}\n</code></pre>\n<p>搭配 flex-direction 可以調整為任何方向，例如：</p>\n<pre><code class=\"hljs language-css\">// 對齊右側結束點\ncrossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">flex-direction</span>: row-reverse;\n  <span class=\"hljs-attribute\">justify-content</span>: flex-end;\n}\n</code></pre>\n<pre><code class=\"hljs language-css\">// 對齊上方結束點\ncrossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">flex-direction</span>: column-reverse;\n  <span class=\"hljs-attribute\">justify-content</span>: flex-end;\n}\n</code></pre>\n<p>另一個範例，將內容對齊中間：</p>\n<pre><code class=\"hljs language-css\">// 對齊中間\ncrossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">justify-content</span>: center;\n}\n</code></pre>\n<p>將項目填滿整個容器並使用空白隔開 (兩側無空白)</p>\n<pre><code class=\"hljs language-css\">crossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">justify-content</span>: space-between;\n}\n</code></pre>\n<p>項目填滿容器使用空白間隔，並在左右兩側也加上空白</p>\n<pre><code class=\"hljs language-css\">crossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">justify-content</span>: space-around;\n}\n</code></pre>\n<h3 id=\"ch3\">CH3<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ch3\"><span>#</span></a></h3>\n<p>使用 align-items 變更項目側邊的對齊</p>\n<pre><code class=\"hljs language-css\">crossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">align-items</span>: flex-start;\n}\n</code></pre>\n<p>以下範例項目採用下到上的縱向排序並齊左</p>\n<pre><code class=\"hljs language-css\">crossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">flex-direction</span>: column-reverse;\n  <span class=\"hljs-attribute\">align-items</span>: flex-start;\n}\n</code></pre>\n<p><code>align-items</code> 擁有 <code>stretch</code> 屬性能夠將項目展開，以下屬性表示從左到右排序的項目，且每個項目的均延展至容器的高度</p>\n<pre><code class=\"hljs language-css\">crossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">align-items</span>: stretch;\n}\n</code></pre>\n<p>使用 <code>justify-content</code> 與 <code>align-items</code> 排列各種情境。</p>\n<p>Line targets up along the red Justify Laser with <code>justify-content</code> and align targets along the blue Alignment Lasers with <code>align-items</code></p>\n<p><code>align-items</code> 的預設值是 <code>stretch</code></p>\n<h3 id=\"ch4\">CH4<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ch4\"><span>#</span></a></h3>\n<p>使用 <code>align-self</code> 針對容器內的各別項目重設對齊</p>\n<pre><code class=\"hljs language-css\">crossbow {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">align-items</span>: flex-end;\n}\n\n<span class=\"hljs-selector-class\">.target</span> {\n  <span class=\"hljs-attribute\">align-self</span>: center;\n}\n</code></pre>\n<h3 id=\"ch5\">CH5<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ch5\"><span>#</span></a></h3>\n<p>使用 <code>flex-grow</code> 標記會隨著容器變寬的項目，預設的值是 <code>0</code> 代表不會隨著容器擴張，如設定超過 <code>1</code> 則會以相對的倍率擴張。</p>\n<p><code>align-items: stretch</code> 指的是項目會延展至副軸的長度。</p>\n<h3 id=\"ch6\">CH6<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ch6\"><span>#</span></a></h3>\n<p><code>flex-grow</code> 表示有額外空間時，項目該如何反應\n<code>flex-shrink</code> 表示空間不足時，項目該如何反應，預設值是 <code>1</code> 代表會隨著容器壓縮，設定為 <code>0</code> 代表不壓縮</p>\n<h3 id=\"ch7\">CH7<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ch7\"><span>#</span></a></h3>\n<p><code>flex-basis</code> 可以視為是 <code>width</code> 或 <code>height</code> 的增強，如果同時設定 <code>flex-basis</code> 或寬高，後者會被忽略。\n<code>flex-basis</code> 在水平的 <code>flex-direction</code> 被視為寬，垂直則視為高。</p>\n<p><code>flex-basis</code> 會受到 <code>min-width</code> 與 <code>min-height</code> 影響，最小寬/高度不會低於設定的值。\n<code>flex-basis</code> 會受到 <code>max-width</code> 與 <code>max-height</code> 影響，最大寬/高度不會超過設定的值。</p>\n<p><code>flex-basis</code> 無法保證寬度，在外層容器寬度不足，項目會因為 <code>flex-shrink</code> 屬性而壓縮。\n<code>flex-basis</code> 的預設值是 <code>auto</code> 代表該項目會使用 <code>width</code> 屬性作其寬度。</p>\n<p>若 <code>flex-basis</code> 設定為 <code>0</code> 容器會縮減至最小可用的寬度。<a href=\"https://stackoverflow.com/questions/47578958/the-difference-between-flex-basis-auto-and-0-zero/47579078\">範例</a></p>\n<p>When flex-basis is 0, flex-grow ignores the size of the content in flex items and treats all space on the line as free space.</p>\n<h3 id=\"ch8\">CH8<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ch8\"><span>#</span></a></h3>\n<p><code>order</code> 屬性用來改變主軸上項目的順序，數字越高離起始點越遠、預設值為 0，設定負數會更接近起始點，\n<code>order</code> 無法套用到 nth-of-type 選擇器，因此選擇的項目不會根據 order 有所改變</p>\n<h3 id=\"ch9\">CH9<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ch9\"><span>#</span></a></h3>\n<p><code>flex-wrap: wrap</code> 屬性會使項目在容器空間不足時換行。\n<code>flex-wrap: wrap-reverse</code> 會將新行建立在項目上方，且同樣會反轉 <code>align-items</code> 的設定，例如 <code>flex-end</code> 指的是上方。</p>\n<p>wrap firt, shrink second.</p>\n<p><code>flex-wrap</code> 的預設值是 <code>no-wrap</code>，其他屬性與其互動 (如 <code>justify-content</code> 與 <code>align-items</code>) 會使用新行作為邊界。</p>\n<h3 id=\"ch10\">CH10<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ch10\"><span>#</span></a></h3>\n<p><code>align-content</code> 用來表示在多行 (wrap 時) 項目該如何對齊，預設值是 <code>stretch</code> 代表項目會填滿主軸的高，運作起來與 <code>align-items</code> 類似：<code>flex-start</code> 代表上方，<code>flex-end</code> 代表下方。\n<code>align-content</code> 也包含了類似 <code>justify-content</code> 的 <code>space-between</code> 與 <code>space-around</code> 屬性。\n<code>align-content</code> 對 <code>flex-wrap: no-wrap</code> 的容器無效</p>\n<p>https://developer.mozilla.org/zh-CN/docs/Web/CSS/align-content</p>\n<h3 id=\"ch11-shortcut\">CH11: Shortcut<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ch11-shortcut\"><span>#</span></a></h3>\n<p><code>flex</code> 屬性可以同時設定 <code>flex-grow</code>、<code>flex-shrink</code> 與 <code>flex-basis</code> 屬性。</p>\n<p><code>flex: 1</code> => <code>flex: 1 1 0</code>\n<code>flex: auto</code> => <code>flex: 1 1 auto</code>\n<code>flex: none</code> => <code>flex: 0 0 auto</code></p>\n<p><code>flex-flow</code> 可以同時設定 <code>flex-direction</code> 與 <code>flex-wrap</code> 屬性。</p>\n<h3 id=\"ch12-review\">CH12: Review<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ch12-review\"><span>#</span></a></h3>"}},"__N_SSG":true}